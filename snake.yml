name: Generate Snake Animation

on:
  # Trigger every 12 hours
  schedule:
    - cron: "* */12 * * *"

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3

      - name: Install required dependencies
        run: sudo apt-get install -y python3 python3-pip

      - name: Install Python library
        run: pip3 install gitpython

      - name: Generate snake animation
        run: |
          git clone https://github.com/Platane/snk.git
          cd snk
          python3 generate_snake.py -u itsdavidmandal -o output/snake.svg -p github-dark

      - name: Push animation to output branch
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        steps:
          - name: Push to output branch
            run: |
              git config user.name "GitHub Actions"
              git config user.email "actions@github.com"
              git checkout -b output
              git add output
              git commit -m "Add snake animation"
              git push origin output -f

**Explanation:**

- **`name`:** Specifies the workflow name.
- **`on`:** Triggers the workflow every 12 hours using a cron expression.
- **`jobs`:** Defines a single job named `generate`.
  - **`runs-on`:** Sets the runner environment to Ubuntu-latest.
  - **`timeout-minutes`:** Sets the maximum execution time to 5 minutes.
  - **`steps`:** Defines the workflow steps:
    - Check out the repository code using the `actions/checkout` action.
    - Install required dependencies (Python3 and Pip) using `sudo apt-get`.
    - Install the `gitpython` library using `pip3 install`.
    - Clone the `Platane/snk` repository containing the snake generation script.
    - Navigate to the cloned directory and execute the `generate_snake.py` script with the following arguments:
      - `-u itsdavidmandal`: Replace with your actual GitHub username.
      - `-o output/snake.svg`: Sets the output path and filename for the generated SVG.
      - `-p github-dark`: Sets the color palette for the animation.
    - Check out the repository again, specifying the current commit and using the `GITHUB_TOKEN` secret for authentication.
    - Push the generated `snake.svg` file and commit changes to a new branch named `output` using the `-f` flag (force push, use with caution!).

**Important notes:**

- **Replace `itsdavidmandal` with your actual GitHub username.**
- This code utilizes the `Platane/snk` repository, which requires the `gitpython` library.
- The `-f` flag in the `git push` command forcefully updates the branch. Use it with caution as it rewrites the branch history. Consider alternative strategies like creating a merge request for safer updates.

Remember, this code provides a starting point. You may need to adapt it to your specific needs and preferences.
